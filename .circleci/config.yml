version: 2
jobs:
  deploy-front-prod:
    docker:
      - image: circleci/node:8.10
    environment:
      GOPATH: /home/circleci/go
      AWS_CONFIG_PATH: /home/circleci/.aws
    steps:
      - checkout
      - restore_cache: &restore_front_cache
          key: dependency-cache-{{ checksum "./yarn.lock" }}
      - run: &install_assume_role
          name: Install assume role tool
          command: |
            sudo apt-get update
            sudo apt-get -y upgrade
            wget https://dl.google.com/go/go1.10.1.linux-amd64.tar.gz
            sudo tar -xf go1.10.1.linux-amd64.tar.gz
            sudo mv go /usr/local
            mkdir $GOPATH
            echo 'export PATH=$GOPATH/bin:/usr/local/go/bin:$PATH' >> $BASH_ENV
            source $BASH_ENV
            go get -u github.com/remind101/assume-role
      - run: &build_aws_config
          name: Build AWS config
          command: |
            sudo mkdir $AWS_CONFIG_PATH
            echo $AWS_MASTER_ACCESS_KEY_ID
            echo $AWS_MASTER_SECRET_ACCESS_KEY
            sudo AWS_CONFIG_PATH=$AWS_CONFIG_PATH AWS_CROSS_ACCOUNT_ID=$AWS_CROSS_ACCOUNT_ID STAGE=$STAGE AWS_MASTER_ACCESS_KEY_ID=$AWS_MASTER_ACCESS_KEY_ID AWS_MASTER_SECRET_ACCESS_KEY=$AWS_MASTER_SECRET_ACCESS_KEY node build_aws_profile
      - run: &install_front_dependencies
          name: Install dependencies
          command: |
            sudo npm i -g serverless
            yarn install
      - save_cache: &save_front_cache
          key: dependency-cache-{{ checksum "./yarn.lock" }}
          paths:
            - ./node_modules
      - run:
          name: Build env
          command: |
            yarn create-env:prod
      - run:
          name: Build frontend
          command: |
            yarn build
      - run:
          name: Deploy frontend
          command: |
            yarn deploy

  deploy-front-stage:
    docker:
      - image: circleci/node:8.10
    environment:
      GOPATH: /home/circleci/go
      AWS_CONFIG_PATH: /home/circleci/.aws
    steps:
      - checkout
      - restore_cache: *restore_front_cache
      - run: *install_assume_role
      - run: *build_aws_config
      - run: *install_front_dependencies
      - save_cache: *save_front_cache
      - run:
          name: Build env
          command: |
            yarn create-env:stage
      - run:
          name: Build frontend
          command: |
            yarn build
      - run:
          name: Deploy frontend
          command: |
            yarn deploy

workflows:
  version: 2
  deploy:
    jobs:
      - deploy-front-prod:
          context: production
          filters:
            branches:
              only:
                - master
      - deploy-front-stage:
          context: staging
          filters:
            branches:
              only: /release-.+/
